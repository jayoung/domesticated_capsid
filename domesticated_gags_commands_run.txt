

xxx should I use orthodb or Ensembl alignments?


##### workflow, in detail

## (1) take all human seq names in 2020.23.10.CA.Hs.refseq.accessions.csv and ../fromWill/2_2020_Oct23_seqs/2020.23.10.CA.final.seqs.refseq.repbase.accessions.csv (a mix of Refseq and repbase proteins, including some that may have droppped out when Will did CD-Hit and Trimal filters

cd ~/FH_fast_storage/miscMalikLab/domesticated_gags_BlakeWiedenheft/getHumanPepsFromWillFiles

../scripts/getHumanSeqsFullLen.bioperl
../scripts/getHumanSeqsJustCapsid.bioperl

there are 71 different seqs to get, after combining those two lists

some seqs are in Will's seq file twice, looks like because they either had two chunks of match to an HMM, or they matched two different HMMs.  He does have a downstream step of using CD-HIT to get rid of redundant seqs, so only one will have made it into his alignment and tree, which is good.  I'll just keep the first one here, doesn't matter which I keep 
    WARNING - found seq NP_001338223.1 more than once, that's OK
    WARNING - found seq NP_001338222.1 more than once, that's OK
    WARNING - found seq NP_001019626.1 more than once, that's OK
    WARNING - found seq XP_024308194.1 more than once, that's OK
    WARNING - found seq NP_001128360.1 more than once, that's OK
    WARNING - found seq NP_001165908.1 more than once, that's OK
    WARNING - found seq NP_001171890.1 more than once, that's OK
    WARNING - found seq NP_055883.2 more than once, that's OK
    WARNING - found seq NP_001354699.1 more than once, that's OK
    WARNING - found seq NP_001341909.1 more than once, that's OK
    WARNING - found seq NP_001035242.1 more than once, that's OK
    WARNING - found seq NP_001171891.1 more than once, that's OK
    WARNING - found seq NP_001165909.1 more than once, that's OK

## look at the genbank entries for the seqs Will got from RefSeq: 
# get plain Refseqs:
../scripts/getRefSeqAccs.bioperl 2020.23.10.humanSeqs.CAonly.Refseq.fa  2020.23.10.humanSeqs.fullLen.Refseq.fa

diff 2020.23.10.humanSeqs.CAonly.Refseq.accs.txt 2020.23.10.humanSeqs.fullLen.Refseq.accs.txt
    they're the same, so I can just use one
rm 2020.23.10.humanSeqs.CAonly.Refseq.accs.txt
../scripts/getgenbankJY_eutils_gbFormat.bioperl 2020.23.10.humanSeqs.fullLen.Refseq.accs.txt

mv 2020.23.10.humanSeqs.fullLen.Refseq.accs.txt 2020.23.10.humanSeqs.fullLen.Refseq.accs.txt.gb  fullGenbankEntries/


## make some of tables summarizing info in the genbank entry
cd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/getHumanPepsFromWillFiles/fullGenbankEntries
../../scripts/genbank2table.bioperl 2020.23.10.humanSeqs.fullLen.Refseq.accs.txt.gb 

output = 
2020.23.10.humanSeqs.fullLen.Refseq.accs.txt.info.byAccession.txt
    (one row per Refseq ID)
2020.23.10.humanSeqs.fullLen.Refseq.accs.txt.info.refs.txt
    (one row per reference mentioned in those refseq entries)
2020.23.10.humanSeqs.fullLen.Refseq.accs.txt.info.byGene.txt
    (one row per gene)


## get placental mammal maf file for each transcript using RefSeq ID:
cd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/multiz_alignments
module load Kent_tools
../scripts/getBedAndMaf.pl
module purge


#
../scripts/maf2fasta_JY.bioperl *placMamm.maf
    remove all gaps, and realign *placMamm.fa.nogaps using MACSE:
../scripts/removegapsfromseq.bioperl *placMamm.fa
../scripts/runMACSEsimpleInFrameAlignment.pl *placMamm.fa.nogaps
    took a while, but all finished fine
../scripts/reorderseqsMACSEbasedOnInputFile.bioperl --verbose=0 *aln1_NT.fa 

../scripts/checkAlignmentFrameshiftsStops.bioperl --MACSE=1 *aln1_NT.sorted.fa


../scripts/removegapsfromalignmentinframeonly.pl *.sorted.noPseuds.fa


mkdir aa_justAlignments
mkdir aa_justAlignments/allPlacMammals aa_justAlignments/noPseuds

cp *noPseuds.fa.degapcodon aa_justAlignments/noPseuds
cp *aln1_NT.sorted.fa aa_justAlignments/allPlacMammals

xxx problem:
species where there is a gap with unalignable stuff in it appear as pseudogenes when they're not really, e.g. CCDC8 rheMac3

I may be able to use liftover to get seqs to align, instead of mafs.  that would work with rheMac3 and susScr3 for CCDC8 and give me intact seqs

I think I would have to download the chain files

#### getting DNA seqs from remote repo:
# 1.  this gets a 7bp long sequence. I think output is in json format?
ucscApiClient -getDnaExample   
Example request for obtaining DNA sequence:
https://api.genome.ucsc.edu/getData/sequence?genome=hg38;chrom=chr1;start=11110531;end=11110538
{"downloadTime": "2020:12:15T14:28:55Z", "downloadTimeStamp": 1608042535, "genome": "hg38", "chrom": "chr1", "start": 11110531, "end": 11110538, "dna": "gattaca"}

pushd ~/public_databases/UCSC/human_Dec2013/liftOverFiles
wget --timestamping  'ftp://hgdownload.cse.ucsc.edu/goldenPath/hg38/liftOver/hg38ToSusScr3.over.chain.gz' 
popd


######## getting alignments via liftOver, rather than through 100-way maf:

"The over.chain files that the liftOver tool uses for coordinate conversions are less stringent compared to the filtered alignments used in the reciprocal best files, which constructs this particular multiz track."


### download the relevant chain files for liftOver:

scripts/getChainFiles.pl

did this once with the assemblies listed in the 100-way mafs (README.placentalMammals.txt), but then manually chose some newer assemblies and put their names in
~/public_databases/UCSC/human_Dec2013/conservation_tracks/README.placentalMammals.newerAssemblies.txt


### prep bed file for all RefSeq genes:
cd liftOver_alignments
cat ../multiz_alignments/*bed > allRefSeqs.hg38.bed


## get only the CDS, as liftOver in sensitive to bits that are missing, and I only care about the CDS.  I initially did it with the full length of the transcript - moved results to liftOverFiles_fullTranscript

I wrote a script to do get a new bed file that shows only the CDS, although I had also asked scicomp to installed a program called bedparse that should do the same thing: 
https://bedparse.readthedocs.io/en/stable/Usage.html
usage: bedparse cds transcripts.bed 

cd liftOver_alignments
../scripts/bed12_getCDSonly.pl allRefSeqs.hg38.bed 


### use liftOver (for now, this still tries to get full transcript, not just CDS)
../scripts/runLiftOver.pl
mv allRefSeqs.hg38.justCDS.liftOver.* liftOverFiles_justCDS/liftOverFiles

I checked results for chimp (panTro4). With the scicomp installed version of liftOver (Kent_tools/20200519-linux.x86_64), there was one unmapped transcript that should have been mapped according to online liftOver (NM_001143978.3).  With a newly downloaded liftOver, it was mapped.

## get cds seqs using liftOver mapped.bed files:

I use ucscApiClient and the coords in the bed file to get sequences, line by line, parsing the resulting JSON output to get a fasta file. Reverse-complement if needed. 

cd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/liftOver_alignments/liftOverFiles_justCDS/liftOverFiles
module load Kent_tools
../../../scripts/getCDSseqsUsingAPIclient.bioperl -returnType=cds *.mapped.bed 
module purge

The unmapped.bed file will record which queries I don't have.
The getCDSlog.txt files would record any species that totally failed, but there are none
    grep 'Assembly not supported' *log.txt  | wc

I ignore seqs that have >20% Ns - there are 36 seqs:
    grep 'ignoring seq' *log.txt  | wc


## collect together each ortholog for each gene
../../../scripts/compileSameTranscriptSeqs.bioperl ../../allRefSeqs.hg38.cds.fa *cds.fa
mv *cdsSeqs.fa ../alignments/
cd ../alignments/

## align with MACSE
../../../scripts/runMACSEsimpleInFrameAlignment.pl *cdsSeqs.fa
    ran (using sbatch)
../../../scripts/reorderseqsMACSEbasedOnInputFile.bioperl --verbose=0 *aln1_NT.fa 
../../../scripts/checkAlignmentFrameshiftsStops.bioperl --MACSE=1 *aln1_NT.sorted.fa
../../../scripts/removegapsfromalignmentinframeonly.pl *.sorted.noPseuds.fa


mkdir aa_justAlignments
mkdir aa_justAlignments/allPlacMammals aa_justAlignments/noPseuds

cp *noPseuds.fa.degapcodon aa_justAlignments/noPseuds
cp *aln1_NT.sorted.fa aa_justAlignments/allPlacMammals

then used R script to make a plot



######## use liftOver but on a newer set of assemblies that were found in the 100-way maf:

cd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/liftOver_alignments/liftOverFiles_justCDS_newAssemblies/liftOverFiles

../../../scripts/runLiftOver.pl -assemblies=/fh/fast/malik_h/grp/public_databases/UCSC/human_Dec2013/conservation_tracks/README.placentalMammals.newerAssemblies.txt
     xxx

module load Kent_tools
../../../scripts/getCDSseqsUsingAPIclient.bioperl -assemblies=/fh/fast/malik_h/grp/public_databases/UCSC/human_Dec2013/conservation_tracks/README.placentalMammals.newerAssemblies.txt -returnType=cds *.mapped.bed 
module purge

The unmapped.bed file will record which queries I don't have.
The getCDSlog.txt files would record any species that totally failed, but there are none
    grep 'Assembly not supported' *log.txt  | wc

I ignore seqs that have >20% Ns - there are 33 seqs:
    grep 'ignoring seq' *log.txt  | wc


## collect together each ortholog for each gene
../../../scripts/compileSameTranscriptSeqs.bioperl -assemblies=/fh/fast/malik_h/grp/public_databases/UCSC/human_Dec2013/conservation_tracks/README.placentalMammals.newerAssemblies.txt ../../allRefSeqs.hg38.cds.fa *cds.fa
mv *cdsSeqs.fa ../alignments/
cd ../alignments/

## align with MACSE
../../../scripts/runMACSEsimpleInFrameAlignment.pl *cdsSeqs.fa
    ran (using sbatch)
../../../scripts/reorderseqsMACSEbasedOnInputFile.bioperl --verbose=0 *aln1_NT.fa 
../../../scripts/checkAlignmentFrameshiftsStops.bioperl --MACSE=1 *aln1_NT.sorted.fa
../../../scripts/removegapsfromalignmentinframeonly.pl *.sorted.noPseuds.fa


mkdir aa_justAlignments
mkdir aa_justAlignments/allPlacMammals aa_justAlignments/noPseuds

cp *noPseuds.fa.degapcodon aa_justAlignments/noPseuds
cp *aln1_NT.sorted.fa aa_justAlignments/allPlacMammals

then used R script to make a plot



###########

###  xxx blast/blat the liftOver seqs to a reference human database - are they going to correct human gene, or to a paralog?

cd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/liftOver_alignments/liftOverFiles_justCDS_newAssemblies/alignments

../../../scripts/checkOrthologsBlastBackOK_sbatchWrapper.bioperl  *.cdsSeqs.fa 

looks like probably quite a few non-orthologs

I put the old alignments here: ../alignments_beforeBlastBack/

mv */*goodOrthologs.fa .
../../../scripts/runMACSEsimpleInFrameAlignment.pl *goodOrthologs.fa
     xxxx running
     xxx redo git sync after they finish
     xxx remake plots. have a look. but they're still probably mixing up paralogs
     
     



xxx align paralogs with each other? ensure I don't have wrong orthologs
e.g. ZCCHC12 and ZCCHC18 are primate-specific paralogs of one another according to Ensembl
and there are various other duplications in that family e.g in carnivores


xxx perhaps I want to use more recent genomes for some species?


xxx model 0 paml:
~/FH_fast_storage/miscMalikLab/domesticated_capsid/liftOver_alignments/liftOverFiles_justCDS_newAssemblies/alignments

######### comparing multiz- and liftOver-based alignments

Using liftOver means the number of things called pseudogenes is a lot lower (e.g. for CCDC8). 
The maf alignments missed out poorly-aligning but in-frame regions

But using liftOver means some species are missing entirely (e.g. for ARC), because liftOver failed.

# try playing with liftOver parameters to report partial genes, or fudge edges, will also improve its hit rate:

cd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/liftOver_alignments/test

## test on ARC in rhesus - assembly gap means first 98 bp are missing
grep 'NM_015193' ../allRefSeqs.hg38.justCDS.bed  > ARC_NM_015193.bed

## default settings - no hit
../liftOver -minMatch=0.1 ARC_NM_015193.bed /fh/fast/malik_h/grp/public_databases/UCSC/human_Dec2013/liftOverFiles/hg38ToRheMac3.over.chain.gz ARC_NM_015193.liftOver.rheMac3.default.mapped.bed  ARC_NM_015193.liftOver.rheMac3.default.unmapped.bed

## add fudgeThick - no hit
../liftOver -minMatch=0.1 -fudgeThick ARC_NM_015193.bed /fh/fast/malik_h/grp/public_databases/UCSC/human_Dec2013/liftOverFiles/hg38ToRheMac3.over.chain.gz ARC_NM_015193.liftOver.rheMac3.fudgeThick.mapped.bed  ARC_NM_015193.liftOver.rheMac3.fudgeThick.unmapped.bed

## add fudgeThick and minBlocks=0.1 - no hit
../liftOver -minMatch=0.1 -minBlocks=0.1 -fudgeThick ARC_NM_015193.bed /fh/fast/malik_h/grp/public_databases/UCSC/human_Dec2013/liftOverFiles/hg38ToRheMac3.over.chain.gz ARC_NM_015193.liftOver.rheMac3.minBlockfudgeThick.mapped.bed  ARC_NM_015193.liftOver.rheMac3.minBlockfudgeThick.unmapped.bed

## add -multiple - no hit.
../liftOver -minMatch=0.1 -minBlocks=0.1 -fudgeThick -multiple ARC_NM_015193.bed /fh/fast/malik_h/grp/public_databases/UCSC/human_Dec2013/liftOverFiles/hg38ToRheMac3.over.chain.gz ARC_NM_015193.liftOver.rheMac3.minBlockfudgeThickMultiple.mapped.bed  ARC_NM_015193.liftOver.rheMac3.minBlockfudgeThickMultiple.unmapped.bed



xx other ideas:



use BLAT or sim4-like program to get intact and pseudogenes from entire assemblies (should get pseudogenes as well), and blat/blast back to human to check we get the right bits

use liftOver to get a bigger region from the genome, then use sim4 or BLAT to get the spliced CDS

xxxx


xxx next:
    make tables summarizing NUMBERS of intact/pseudo?
    make tables summarizing intact/pseud status by species?
    dN/dS model 0 across vertebrates?
    primate positive selection?



xxx what to do with the Repbase things that Will found?  I think I will want to
1. find where they are in the hg38 - there will be multiple versions of each
2. ignore any that overlap with the things I already looked at because they're in the RefSeq set
3. look at the rest and see if there is an intact ORF, and if so do the same thing with getting the mafs and processing them


## after looking at the gene names in 2020.23.10.humanSeqs.fullLen.Refseq.accs.txt.info.byGene.txt, and a review paper by Kaneko-Ishino (fig 7), I realized there are a few more that Will might be missing:
RTL4
RTL9
PNMA8C
PNMA6B (pseudogene)

# get their seqs and do PFAM search
cd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/additionalHits
../scripts/getgenbankJY_eutils_gbFormat.bioperl RTL4.txt RTL9.txt PNMA8C.txt
../scripts/genbank2fasta.bioperl RTL4.txt.gb RTL9.txt.gb PNMA8C.txt.gb
../scripts/searchPFAMprotqueryNew.pl RTL4.txt.gb.fa RTL9.txt.gb.fa PNMA8C.txt.gb.fa
../scripts/searchPFAMprotqueryNewMoreSensitive.pl RTL4.txt.gb.fa RTL9.txt.gb.fa PNMA8C.txt.gb.fa 
    xxxx should they have been in Will's table? maybe they don't have the capsid region? if so tell him


## (3) figure out for each location(s) in the human genome (hg38)
   ## which human genome version?  hg38 or hg19? whichever has more conservation tracks available.  hg38 and hg19 both have 100 vertebrates. hg38 also has a 27 (or 30?) primates track, and hg19 does not.  USE HG38.
   
   ## (i) For the Refseq proteins I'll try BLAT looking at exact and almost exact matches - try require 95% identity

cd ~/FH_fast_storage/miscMalikLab/domesticated_gags_BlakeWiedenheft/mapToHg38/Refseq
ln -s ../../getHumanPepsFromWillFiles/*Refseq.fa .

# get ooc file for hg38 for blatX searches:
pushd ~/public_databases/UCSC/human_Dec2013
blat hg38.fa /dev/null /dev/null -t=dnax q=prot -makeOoc=5.dnax.ooc -repMatch=1024 -tileSize=5 
popd

# do searches
blat /fh/fast/malik_h/grp/public_databases/UCSC/human_Dec2013/hg38.fa 2020.23.10.humanSeqs.CAonly.Refseq.fa -t=dnax -q=prot -ooc=/fh/fast/malik_h/grp/public_databases/UCSC/human_Dec2013/5.dnax.ooc -minIdentity=95 2020.23.10.humanSeqs.CAonly.Refseq.blatHg38.psl

blat /fh/fast/malik_h/grp/public_databases/UCSC/human_Dec2013/hg38.fa 2020.23.10.humanSeqs.fullLen.Refseq.fa -t=dnax -q=prot -ooc=/fh/fast/malik_h/grp/public_databases/UCSC/human_Dec2013/5.dnax.ooc -minIdentity=95 2020.23.10.humanSeqs.fullLen.Refseq.blatHg38.psl


## (ii) For the Repbase proteins I will want to be a bit more tolerant of mismatch, but I can exclude hits with frameshifts/stops



##### playing with UCSC 100-way vertebrate alignments

cd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/testData/multiz_alignments/ZCCHC12

### getting maf files, given a bed file:
cd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/testData/multiz_alignments/PNMA3

module load Kent_tools
mafFetch hg38 multiz100way PNMA3region.bed PNMA3region.100way.maf
    not sure what it would do if my bed interval contained blocks?  I will want that to work, I think


grep 'NM_013364'  ~/public_databases/UCSC/human_Dec2013/misc_tracks/hg38.refGene.2020dec3.bed > PNMA3_NM_013364.refGene.bed

grep 'NM_001282535'  ~/public_databases/UCSC/human_Dec2013/misc_tracks/hg38.refGene.2020dec3.bed > PNMA3_NM_001282535.refGene.bed


##### use mafFrags to download alignment for a single ORF specified in a single bed file (if the bed file had >1 ORF I would need to somehow split the maf after getting it):

(mafFetch gets the entire genomic region, whereas mafFrags gets just the exons)

module load Kent_tools

# for NM_013364, just placental mammals
mafFrags -orgs=/fh/fast/malik_h/grp/public_databases/UCSC/human_Dec2013/conservation_tracks/README.placentalMammals.txt -bed12 -thickOnly hg38 multiz100way PNMA3_NM_013364.refGene.bed PNMA3_NM_013364.refGene.100way.frags.2.maf

maf2fasta_JY.bioperl PNMA3_NM_013364.refGene.100way.frags.2.maf 

removegapsfromalignment.bioperl PNMA3_NM_013364.refGene.100way.frags.2.combined.fa

# for NM_001282535, just placental mammals
mafFrags -orgs=/fh/fast/malik_h/grp/public_databases/UCSC/human_Dec2013/conservation_tracks/README.placentalMammals.txt -bed12 -thickOnly hg38 multiz100way PNMA3_NM_001282535.refGene.bed PNMA3_NM_001282535.refGene.100way.frags.2.maf

maf2fasta_JY.bioperl PNMA3_NM_001282535.refGene.100way.frags.2.maf 

removegapsfromalignment.bioperl PNMA3_NM_001282535.refGene.100way.frags.2.combined.fa

# I wrote a script to check that alignment, but the script helped me realise that the maf alignment is not very good: there are more frameshifts than needed in the poorly conserved regions (so alignment is way out of frame)

./checkAlignmentFrameshiftsStops.bioperl PNMA3_NM_013364.refGene.100way.frags.2.combined.fa.degapped

output = four files: 
 noPseuds.fa 
 pseudReportSummary.txt = num intact genes and pseudogenes
 pseudReportEachGene.txt = which genes are intact/pseuds
 pseudReportDetailed.txt = locations of stop codons/frameshifts in each pseudogene

removegapsfromalignment.bioperl  PNMA3_NM_013364.refGene.100way.frags.2.combined.degapped.noPseuds.fa 


## some commands to help me check what's going on:
splitfastafileextractoneseq.pl PNMA3_NM_013364.refGene.100way.frags.2.combined.fa.nogaps NM_013364
translate1frame.bioperl NM_013364.fa 
tblastn -query NM_013364.fa.peps.fasta -db ~/public_databases/UCSC/dog_Sep2011/canFam3.fa -num_threads 4 -out NM_013364.fa.peps.fasta.tblastn_canFam3
blastn -query NM_013364.fa -db ~/public_databases/UCSC/dog_Sep2011/canFam3.fa -num_threads 4 -out NM_013364.fa.blastn_canFam3 -task blastn
splitfastafileextractoneseq.pl PNMA3_NM_013364.refGene.100way.frags.2.combined.fa.nogaps canFam3
blastn -query canFam3.fa -db ~/public_databases/UCSC/dog_Sep2011/canFam3.fa -num_threads 4 -out canFam3.fa.blastn_canFam3 -task blastn

# I realized that the maf alignment is not very good- more frameshifts than needed in the poorly conserved regions (so alignment is way out of frame)

I started editing it to make an in-frame alignment but realized it was way to far off.
PNMA3_NM_013364.refGene.100way.frags.2.combined.fa.degapped.inframeManual



## try realigning PNMA3_NM_013364.refGene.100way.frags.2.combined.fa.nogaps using MACSE

# realign using MACSE and a less harsh frameshift penalty - PNMA3_NM_013364
module load Java/1.8.0_181
java -jar -Xmx600m /fh/fast/malik_h/grp/malik_lab_shared/bin/macse_v1.2.jar -prog alignSequences -seq PNMA3_NM_013364.refGene.100way.frags.2.combined.fa.nogaps -out_NT PNMA3_NM_013364.refGene.100way.frags.2.combined.fa.nogaps.MACSE.nt.fa -out_AA PNMA3_NM_013364.refGene.100way.frags.2.combined.fa.nogaps.MACSE.aa.fa > PNMA3_NM_013364.refGene.100way.frags.2.combined.fa.nogaps.MACSE.log.txt
module purge
grep '>' PNMA3_NM_013364.refGene.100way.frags.2.combined.fa.nogaps > PNMA3_NM_013364.refGene.100way.frags.2.combined.fa.nogaps.seqorder.txt
reorderseqs.bioperl PNMA3_NM_013364.refGene.100way.frags.2.combined.fa.nogaps.MACSE.nt.fa  PNMA3_NM_013364.refGene.100way.frags.2.combined.fa.nogaps.seqorder.txt

# realign using MACSE and a less harsh frameshift penalty - PNMA3_NM_001282535
module load Java/1.8.0_181
java -jar -Xmx600m /fh/fast/malik_h/grp/malik_lab_shared/bin/macse_v1.2.jar -prog alignSequences -seq PNMA3_NM_001282535.refGene.100way.frags.2.combined.fa.nogaps -out_NT PNMA3_NM_001282535.refGene.100way.frags.2.combined.fa.nogaps.MACSE.nt.fa -out_AA PNMA3_NM_001282535.refGene.100way.frags.2.combined.fa.nogaps.MACSE.aa.fa > PNMA3_NM_001282535.refGene.100way.frags.2.combined.fa.nogaps.MACSE.log.txt
module purge
grep '>' PNMA3_NM_001282535.refGene.100way.frags.2.combined.fa.nogaps > PNMA3_NM_001282535.refGene.100way.frags.2.combined.fa.nogaps.seqorder.txt
reorderseqs.bioperl PNMA3_NM_001282535.refGene.100way.frags.2.combined.fa.nogaps.MACSE.nt.fa  PNMA3_NM_001282535.refGene.100way.frags.2.combined.fa.nogaps.seqorder.txt


# parse alignments looking for stops/frameshifts

./checkAlignmentFrameshiftsStops.bioperl --MACSE=1 PNMA3_NM_013364.refGene.100way.frags.2.combined.fa.nogaps.MACSE.nt.sorted.fa
removegapsfromalignment.bioperl PNMA3_NM_013364.refGene.100way.frags.2.combined.fa.nogaps.MACSE.nt.sorted.noPseuds.fa

./checkAlignmentFrameshiftsStops.bioperl --MACSE=1 PNMA3_NM_001282535.refGene.100way.frags.2.combined.fa.nogaps.MACSE.nt.sorted.fa
removegapsfromalignment.bioperl PNMA3_NM_001282535.refGene.100way.frags.2.combined.fa.nogaps.MACSE.nt.sorted.noPseuds.fa



# the older maf alignments - not using these any more

./checkAlignmentFrameshiftsStops.bioperl PNMA3_NM_013364.refGene.100way.frags.2.combined.fa.degapped

./checkAlignmentFrameshiftsStops.bioperl PNMA3_NM_001282535.refGene.100way.frags.2.combined.fa.degapped



#### more notes about 100-way alignment display. I may want to think about parsing the between maf-block info

Gap Annotation
The Display chains between alignments configuration option enables display of gaps between alignment blocks in the pairwise alignments in a manner similar to the Chain track display. The following conventions are used:

Single line: No bases in the aligned species. Possibly due to a lineage-specific insertion between the aligned blocks in the human genome or a lineage-specific deletion between the aligned blocks in the aligning species.
Double line: Aligning species has one or more unalignable bases in the gap region. Possibly due to excessive evolutionary distance between species or independent indels in the region between the aligned blocks in both species.
Pale yellow coloring: Aligning species has Ns in the gap region. Reflects uncertainty in the relationship between the DNA of both species, due to lack of sequence in relevant portions of the aligning species.

Genomic Breaks
Discontinuities in the genomic context (chromosome, scaffold or region) of the aligned DNA in the aligning species are shown as follows:

Vertical blue bar: Represents a discontinuity that persists indefinitely on either side, e.g. a large region of DNA on either side of the bar comes from a different chromosome in the aligned species due to a large scale rearrangement.
Green square brackets: Enclose shorter alignments consisting of DNA from one genomic context in the aligned species nested inside a larger chain of alignments from a different genomic context. The alignment within the brackets may represent a short misalignment, a lineage-specific insertion of a transposon in the human genome that aligns to a paralogous copy somewhere else in the aligned species, or other similar occurrence.


## see other maf tools listed here: http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/

mafFrag - Extract maf sequences for a region from database (perhaps similar to mafFetch, but I specify coords on command line)

mafFrags - Collect MAFs from regions specified in a 6 column bed file (perhaps this is what I need for multi-exon bed intervals?)

mafSpeciesSubset - Extract a maf that just has a subset of species. (perhaps I will want to ignore non-mammals, or bad genomes)



### converting maf to fasta
module load LAST
maf-convert --help


# some conversions that work:
maf-convert axt ZCCHC12plusSmallFlank_100wayAln_hg38.maf > ZCCHC12plusSmallFlank_100wayAln_hg38.axt

maf-convert html ZCCHC12plusSmallFlank_100wayAln_hg38.maf > ZCCHC12plusSmallFlank_100wayAln_hg38.html

# some conversions that don't work:
maf-convert tab ZCCHC12plusSmallFlank_100wayAln_hg38.maf
    maf-convert: error: too many values to unpack

maf-convert blast ZCCHC12plusSmallFlank_100wayAln_hg38.maf
    maf-convert: error: for Blast, each alignment must have 2 sequences

maf-convert blasttab ZCCHC12plusSmallFlank_100wayAln_hg38.maf
    maf-convert: error: for BlastTab, each alignment must have 2 sequences

maf-convert chain ZCCHC12plusSmallFlank_100wayAln_hg38.maf
    maf-convert: error: too many values to unpack

maf-convert psl ZCCHC12plusSmallFlank_100wayAln_hg38.maf
    maf-convert: error: for PSL, each alignment must have 2 sequences

maf-convert sam ZCCHC12plusSmallFlank_100wayAln_hg38.maf
    maf-convert: error: for SAM, each alignment must have 2 sequences

cd test_axt2phy
the unedited axt2phy.pl needs Bio/Graphics/Wiggle.pm, which I could not install, but I commented out that line. After that it runs,    it got just the second sequence for each alignment block.


./axt2phy.pl -species hg38.chrX -axtin ZCCHC12plusSmallFlank_100wayAln_hg38.axt -gffout ZCCHC12plusSmallFlank_100wayAln_hg38.axt.gff -fastaout ZCCHC12plusSmallFlank_100wayAln_hg38.axt.fa


######################## use tblastn of NR database to collect intact orthologs where possible. fill in pseudogenes afterwards.

xx use BLAST to get just intact genes from NCBI NR (require mutual best blast) (won't get pseudogenes, probably)


This does the blast, and returns results in the regular format as well as a tab-delimited format that includes taxonomy info

cd blasts/tblastn_NR/Refseq
../../../scripts/callblastjanetNRntProtquery.bioperl ../../../getHumanPepsFromWillFiles/2020.23.10.humanSeqs.fullLen.Refseq.fa
    re-ran a couple of times to get all the failed ones
    
cd ../RepBase
../../../scripts/callblastjanetNRntProtquery.bioperl ../../../getHumanPepsFromWillFiles/2020.23.10.humanSeqs.fullLen.Repbase.fa
    xxxx a few failed twice in a row: exceeding CPU time.  I think I will leave that alone

# sort blast output according to which alignment we want them in:
../../../scripts/sortBlastOutputByAlignmentGroup.pl *tblastnNR *tblastnNR.txt



##### get human nucleotide ORF seqs to start off alignments:
cd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/alignments

## gets the human accessions, sorted by alignment group:
../scripts/getHumanNucleotideAccessionsAndGroup.pl 
../scripts/getgenbankJY_eutils_gbFormat.bioperl -db=nucleotide */*_accs.txt
../scripts/getCDSseqAndBedFileFromGenbankEntry.bioperl -includeNoCDS=0 -addORF=0 */*.gb


##### work on ARC alignment:

# there's only one blast, only one human ortholog, which makes it easier

cd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/blasts/tblastn_NR/Refseq/sortedBlasts/ARC/
../../../../../scripts/sortBlastHitsBySpecies.pl NP_056008.1-Arc_C-278-360.tblastnNR.txt

cd hits_each_species
# sort into taxonmonic classes:
../../../../../../scripts/sortHitFilesByTaxonomy.pl hit*txt

../../../../../../scripts/getgenbankJY_eutils_gbFormat.bioperl -db=nucleotide */hits*.txt 
../../../../../../scripts/getCDSseqAndBedFileFromGenbankEntry.bioperl -includeNoCDS=0 -addORF=0 */hits_*.gb

## first I take human and add mouse cat cow horse microbat elephant
(I was going to do dog, but the only two hits from Canis lupus familiaris are GENOMIC sequences not cDNA)

pushd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/blasts/tblastn_NR/Refseq/sortedBlasts/ARC/hits_each_species

cp Glires/hits_Mus_musculus.txt.gb.ORFs ~/FH_fast_storage/miscMalikLab/domesticated_capsid/alignments/ARC/aln1_parts
cp Carnivora/hits_Felis_catus.txt.gb.ORFs ~/FH_fast_storage/miscMalikLab/domesticated_capsid/alignments/ARC/aln1_parts
cp Other_mammals/hits_Bos_taurus.txt.gb.ORFs ~/FH_fast_storage/miscMalikLab/domesticated_capsid/alignments/ARC/aln1_parts
cp Other_mammals/hits_Equus_caballus.txt.gb.ORFs ~/FH_fast_storage/miscMalikLab/domesticated_capsid/alignments/ARC/aln1_parts
cp Bats/hits_Myotis_myotis.txt.gb.ORFs ~/FH_fast_storage/miscMalikLab/domesticated_capsid/alignments/ARC/aln1_parts
cp Other_mammals/hits_Loxodonta_africana.txt.gb.ORFs ~/FH_fast_storage/miscMalikLab/domesticated_capsid/alignments/ARC/aln1_parts

popd

mv things to aln1_parts
cd aln1_parts
cat *ORFs > ARC_seqsToAlign1.fa

../../../scripts/checkOrthologsBlastBackOKtoSameGroupSeq.bioperl ARC_seqsToAlign1.fa
    all did blast back fine (script might need tweaking for PNMA/SIRH groups)

# remove exactly redundant seqs - this reduces down to one seq per species, except mouse
../../../scripts/removeRedundantSequences.bioperl -checkSubseq=1 ARC_seqsToAlign1.fa

# there are still two mouse seqs: I used blast to show there is only a single difference (in 1191bp). I will remove one by hand, in ARC_seqsToAlign1.fa.nonRedundant.v2

makeblastdb -in ARC_seqsToAlign1.fa.nonRedundant -dbtype nucl
blastn -task blastn -query ARC_seqsToAlign1.fa.nonRedundant -db ARC_seqsToAlign1.fa.nonRedundant -out ARC_seqsToAlign1.fa.nonRedundant.blastnEachOther

# now align
../../../scripts/runMACSEsimpleInFrameAlignment.pl ARC_seqsToAlign1.fa.nonRedundant.v2
mv ARC_seqsToAlign1.fa.nonRedundant.v2_aln1* ..

very good alignment.  

#### ARC aln2

for dN/dS, add 3 more placental mammals: guinea pig, pig, aardvark (because I couldn't get armadillo)
for amino acid conservation analysis, add a marsupial, platypus, bird, xenopus

pushd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/blasts/tblastn_NR/Refseq/sortedBlasts/ARC/hits_each_species

cp Glires/hits_Cavia_porcellus.txt.gb.ORFs Other_mammals/hits_Sus_scrofa.txt.gb.ORFs Other_mammals/hits_Orycteropus_afer_afer.txt.gb.ORFs Other_mammals/hits_Monodelphis_domestica.txt.gb.ORFs Other_mammals/hits_Ornithorhynchus_anatinus.txt.gb.ORFs BirdsReptiles/hits_Gallus_gallus.txt.gb.ORFs other/hits_Xenopus_laevis.txt.gb.ORFs ~/FH_fast_storage/miscMalikLab/domesticated_capsid/alignments/ARC/aln2_parts/

cat hits*Fs > hitsToAdd.fa

# there were no redundant seqs
../../../scripts/removeRedundantSequences.bioperl -checkSubseq=1 hitsToAdd.fa
# chicken had 2 seqs - blast shows me there are only 2bp of difference: I manually remove one in hitsToAdd.fa.v2
makeblastdb -in hitsToAdd.fa -dbtype nucl
blastn -task blastn -query hitsToAdd.fa -db hitsToAdd.fa -out hitsToAdd.fa.blastnEachOther

../../../scripts/checkOrthologsBlastBackOKtoSameGroupSeq.bioperl hitsToAdd.fa.v2
    all blast back to ARC

cat ARC_seqsToAlign1.fa.nonRedundant.v2 hitsToAdd.fa.v2 > ARC_seqsToAlign2.fa


# now align
mv ARC_seqsToAlign2.fa ..
cd ..
../../scripts/runMACSEsimpleInFrameAlignment.pl ARC_seqsToAlign2.fa
    good alignment

# do model 0 dN/dS on just placental mammals
splitfastafileextractsomeseqs.bioperl ARC_seqsToAlign2_aln1_NT.fa placentalMammalSeqnames.txt 
removegapsfromalignmentinframeonly.pl placentalMammalSeqnames.txt.fa 
    checked alignment - it is good

../../../scripts/makeTreeAndRunPAML.pl placentalMammalSeqnames.txt.fa.degapcodon
    ARC dN/dS = 0.0322 (whole gene, 10 placental mammals, dS tree len 5.4)

what next:  add transposon outgroups and make a tree?


############ SIRH aignment

# sort blasts by species

cd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/blasts/tblastn_NR/Refseq/sortedBlasts/SIRH/
../../../../../scripts/sortBlastHitsBySpecies.pl *tblastnNR.txt

# sort into taxonomic classes:
cd hits_each_species
../../../../../../scripts/sortHitFilesByTaxonomy.pl hit*txt

../../../../../../scripts/getgenbankJY_eutils_gbFormat.bioperl -db=nucleotide */hits*.txt 
../../../../../../scripts/getCDSseqAndBedFileFromGenbankEntry.bioperl -includeNoCDS=0 -addORF=0 */hits_*.gb

## SIRH aln1 - just human genes, after removing redundant transcript isoforms

cd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/alignments/SIRH/aln1_parts 

../../../scripts/removeRedundantSequences.bioperl -checkSubseq=1 SIRH_accs.txt.gb.ORFs
    there are still 2 isoforms of PEG10 and RTL8A, but I'll leave them for now

../../../scripts/runMACSEsimpleInFrameAlignment.pl SIRH_accs.txt.gb.ORFs.nonRedundant
    done

## SIRH aln2 - see what happens if I just try adding all horse and cow and elephant seqs, and split into paralogs later.


pushd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/blasts/tblastn_NR/Refseq/sortedBlasts/SIRH/hits_each_species

cp Other_mammals/hits_Equus_caballus.txt.gb.ORFs Other_mammals/hits_Bos_taurus.txt.gb.ORFs Other_mammals/hits_Loxodonta_africana.txt.gb.ORFs ~/FH_fast_storage/miscMalikLab/domesticated_capsid/alignments/SIRH/aln2_parts 

cd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/alignments/SIRH/aln2_parts 
cat hits*Fs > hitsToAdd.fa

../../../scripts/removeRedundantSequences.bioperl -checkSubseq=1 hitsToAdd.fa

# check for a few other possible redundant seqs:
makeblastdb -in hitsToAdd.fa.nonRedundant -dbtype nucl
blastn -task blastn -query hitsToAdd.fa.nonRedundant -db hitsToAdd.fa.nonRedundant -out hitsToAdd.fa.nonRedundant.blastnEachOther

sort hitsToAdd.fa.nonRedundantGroups.txt
    probably no duplicates
    

../../../scripts/checkOrthologsBlastBackOKtoSameGroupSeq.bioperl hitsToAdd.fa.nonRedundant
        three flagged:
    GNB1L_Bos_taurus_XM_024977193   definitely bad: it's the overlapping gene
    LOC111774832_Equus_caballus_XM_023648267 definitely bad: don't know why this one came up
    and keep this one - not sure why the script flagged it (presumably RTL4 is not among my seqs to align - perhaps it should be) 
    RTL4_Loxodonta_africana_XM_003414856    No      RTL4    NM_001004308

cat ../SIRH_accs.txt.gb.ORFs.nonRedundant hitsToAdd.fa.nonRedundant.v2 > ../SIRHseqsToAlign2.fa


cd ..
../../scripts/runMACSEsimpleInFrameAlignment.pl SIRHseqsToAlign2.fa


# SIRH going forwards, split into alignment groups, using blast back, rather than trying to align all to each other

## aln3s - add macaque, marmoset, mouse, rat, chinese hamster, pig, sheep, dog, cat, megabat, armadillo

cd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/blasts/tblastn_NR/Refseq/sortedBlasts/SIRH/hits_each_species

cp Primates/hits_Macaca_mulatta.txt.gb.ORFs Primates/hits_Callithrix_jacchus.txt.gb.ORFs Glires/hits_Mus_musculus.txt.gb.ORFs Glires/hits_Rattus_norvegicus.txt.gb.ORFs Glires/hits_Cricetulus_griseus.txt.gb.ORFs Other_mammals/hits_Sus_scrofa.txt.gb.ORFs Other_mammals/hits_Ovis_aries.txt.gb.ORFs Carnivora/hits_Canis_lupus_familiaris.txt.gb.ORFs Carnivora/hits_Felis_catus.txt.gb.ORFs Bats/hits_Pteropus_alecto.txt.gb.ORFs Other_mammals/hits_Dasypus_novemcinctus.txt.gb.ORFs ~/FH_fast_storage/miscMalikLab/domesticated_capsid/alignments/SIRH/aln3_parts


cd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/alignments/SIRH/aln3_parts

cat SIRHseqsToAlign2.fa hits_*Fs > SIRHseqsToAlign3.fa 

../../../scripts/removeRedundantSequences.bioperl -checkSubseq=1 SIRHseqsToAlign3.fa
../../../scripts/blastBackToClassifyAndRunMACSE.pl SIRHseqsToAlign3.fa.nonRedundant



xxx next, I make a master alignments dir for all the CURRENT alignments, curated, and fix my script to be able to add to that rather than only look at the newly collected sequences

xx then use a script to parse MACSE alignment and list pseudogenes etc
    
    xxx alignment: need to figure out whether to split into subgroups before adding more species


xxxxxx


############ PNMA alignment

# sort blasts by species

cd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/blasts/tblastn_NR/Refseq/sortedBlasts/PNMA/
../../../../../scripts/sortBlastHitsBySpecies.pl *tblastnNR.txt

# sort into taxonmonic classes:
cd hits_each_species
../../../../../../scripts/sortHitFilesByTaxonomy.pl hit*txt

../../../../../../scripts/getgenbankJY_eutils_gbFormat.bioperl -db=nucleotide */hits*.txt 
../../../../../../scripts/getCDSseqAndBedFileFromGenbankEntry.bioperl -includeNoCDS=0 -addORF=0 */hits_*.gb

## PNMA aln1 - just human genes, after removing redundant transcript isoforms

cd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/alignments/PNMA/aln1_parts 

../../../scripts/removeRedundantSequences.bioperl -checkSubseq=1 PNMA_accs.txt.gb.ORFs
    there are still 2 isoforms of PNAM3, PNMA6E and three of PNMA8A, but I'll leave them for now

../../../scripts/runMACSEsimpleInFrameAlignment.pl PNMA_accs.txt.gb.ORFs.nonRedundant
    done.
    the paralogs align poorly.      
    
    
## PNMA aln2 -  take all human PNMAs, add all horse and cow and elephant seqs

pushd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/blasts/tblastn_NR/Refseq/sortedBlasts/PNMA/hits_each_species

cp Other_mammals/hits_Equus_caballus.txt.gb.ORFs Other_mammals/hits_Bos_taurus.txt.gb.ORFs Other_mammals/hits_Loxodonta_africana.txt.gb.ORFs ~/FH_fast_storage/miscMalikLab/domesticated_capsid/alignments/PNMA/aln2_parts 

cd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/alignments/PNMA/aln2_parts 
cat hits*Fs > hitsToAdd.fa

../../../scripts/removeRedundantSequences.bioperl -checkSubseq=1 hitsToAdd.fa

# check for a few other possible redundant seqs:
makeblastdb -in hitsToAdd.fa.nonRedundant -dbtype nucl
blastn -task blastn -query hitsToAdd.fa.nonRedundant -db hitsToAdd.fa.nonRedundant -out hitsToAdd.fa.nonRedundant.blastnEachOther

sort hitsToAdd.fa.nonRedundantGroups.txt
    then manually look at apparent duplicates:
        CCDC8_Bos_taurus: only 2bp diff, remove CCDC8_Bos_taurus_BT021198
        PNMA8A_Loxodonta_africana  same, but one shorter: remove PNMA8A_Loxodonta_africana_XM_010586464

../../../scripts/checkOrthologsBlastBackOKtoSameGroupSeq.bioperl hitsToAdd.fa.nonRedundant.v2
    all good.

cat ../PNMA_accs.txt.gb.ORFs.nonRedundant hitsToAdd.fa.nonRedundant.v2 > ../PNMAseqsToAlign2.fa
cd ..

../../scripts/runMACSEsimpleInFrameAlignment.pl PNMAseqsToAlign2.fa

#### PNMA aln3 - going forwards, split alignment into subgroups 

add macaque, marmoset, mouse, rat, chinese hamster, pig, sheep, dog, cat, megabat, armadillo

cd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/blasts/tblastn_NR/Refseq/sortedBlasts/PNMA/hits_each_species


cp Primates/hits_Macaca_mulatta.txt.gb.ORFs Primates/hits_Callithrix_jacchus.txt.gb.ORFs Glires/hits_Mus_musculus.txt.gb.ORFs Glires/hits_Rattus_norvegicus.txt.gb.ORFs Glires/hits_Cricetulus_griseus.txt.gb.ORFs Other_mammals/hits_Sus_scrofa.txt.gb.ORFs Other_mammals/hits_Ovis_aries.txt.gb.ORFs Carnivora/hits_Canis_lupus_familiaris.txt.gb.ORFs Carnivora/hits_Felis_catus.txt.gb.ORFs Bats/hits_Pteropus_alecto.txt.gb.ORFs Other_mammals/hits_Dasypus_novemcinctus.txt.gb.ORFs ~/FH_fast_storage/miscMalikLab/domesticated_capsid/alignments/PNMA/aln3_parts

cd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/alignments/PNMA/aln3_parts

cat PNMAseqsToAlign2.fa hits_*Fs > PNMAseqsToAlign3.fa 
../../../scripts/removeRedundantSequences.bioperl -checkSubseq=1 PNMAseqsToAlign3.fa
../../../scripts/blastBackToClassifyAndRunMACSE.pl PNMAseqsToAlign3.fa.nonRedundant

after alignments finish:

cd PNMAseqsToAlign3.fa.nonRedundant_blastBackCheck
cp *NT.fa ../../masterAlignments/
   and edit those

### parsing my blast alignments:xxxx
now we use any Homo_sapiens seqs as reference, rather than the first seq

# test parsing a single one
cd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/alignments/ARC/masterAlignments

../../../scripts/checkAlignmentFrameshiftsStops.bioperl -findFullLenRefSeqs=1 ARC_seqsToAlign2_aln1_NT.fa

# parse all 
cd ../../
../scripts/checkAlignmentFrameshiftsStops.bioperl -findFullLenRefSeqs=1 -geneField=2 */masterAlignments/*_NT.fa
    if I need to reset that:  rm */masterAlignments/*NT*seud*




##### xxxx add my protein alignments to Will's alignments, after trimming to just alignable bit?

cd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/alignments/combineAll

cat  ../*/master*/*NT.fa > allAlns_2021_Jan11_NT.fa
removegapsfromseq.bioperl allAlns_2021_Jan11_NT.fa  
../../scripts/getJustHumanSeqs.bioperl allAlns_2021_Jan11_NT.fa.nogaps 

translate1frame.bioperl allAlns_2021_Jan11_NT.nogaps.human.fa

../../scripts/searchPFAMprotqueryNewMoreSensitive.pl allAlns_2021_Jan11_NT.nogaps.human.fa.peps.fasta

xxx I think I will use an HMM to query these seqs to get a cross-paralog alignment that I can make a protein tree on

cat ../../fromWill/4_2020_Dec18/*subtree/*aln.faa > allWillSeqs_AA_2021_Jan11.fa
removegapsfromseq.bioperl allWillSeqs_AA_2021_Jan11.fa 
makeblastdb -in allWillSeqs_AA_2021_Jan11.fa.nogaps -dbtype prot

blastx -query allAlns_2021_Jan11_NT.nogaps.human.fa -db allWillSeqs_AA_2021_Jan11.fa.nogaps  -out allAlns_2021_Jan11_NT.nogaps.human.blastxWillAlignedSeqs

###  blast repeatmasker library to get more useful outgroups

blastp -db ~/malik_lab_shared/lib/RepeatMasker2015_Oct29_linux_64/RepeatMasker/Libraries/RepeatPeps.lib -query allAlns_2021_Jan11_NT.nogaps.human.fa.peps.fasta -out allAlns_2021_Jan11_NT.nogaps.human.fa.peps.fasta.blastpRepBase -num_alignments 100 -num_descriptions 100 -num_threads 4

# PNMA family: MamGyp_gag is a very good match and will be a good outgroup.
cd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/alignments/PNMA/outgroups
splitfastafileextractoneseq.pl  ~/malik_lab_shared/lib/RepeatMasker2015_Oct29_linux_64/RepeatMasker/Libraries/RepeatPeps.lib MamGyp_gag#LTR/Gypsy
cd ../
removegapsfromseq.bioperl PNMAseqsToAlign2_aln1_AA.fa
cat PNMAseqsToAlign2_aln1_AA.fa.nogaps outgroups/MamGyp_gag#LTR_Gypsy.fa > PNMAseqsToAlign2_plusOutgroup_AA.fa

ARC - only a shortish match to anything in RepBase.  The HMM match is also short.  xx would RAT ARC have a better match? it can form capsids

SIRHs xxx

### aligning all PNMA seqs together with Gypsy outgroup

cd /FH_fast_storage/miscMalikLab/domesticated_capsid/alignments/PNMA/masterAlignments

../../../scripts/addAlnNameToSeqNames.bioperl *NT.fa

cat *peps.fa ../outgroups/MamGyp_gag#LTR_Gypsy.fa > PNMAseqsToAlign3edited_plusOutgroup.peps.fa

../../../scripts/translate1frame.bioperl *addGroupNames.fa

../../../scripts/removegapsfromseq.bioperl PNMAseqsToAlign3edited_plusOutgroup.peps.fa

mafft PNMAseqsToAlign3edited_plusOutgroup.peps.fa.nogaps > PNMAseqsToAlign3edited_plusOutgroup.peps_aln1.fa

    when they are all together, there's too much divergence for a tree.

# nucleotide collection, for blasting

cat *_NT.addGroupNames.fa > PNMAseqsToAlign3edited.fa
../../../scripts/removegapsfromseq.bioperl PNMAseqsToAlign3edited.fa
makeblastdb -in PNMAseqsToAlign3edited.fa.nogaps -dbtype nucl



### aligning PNMA seqs in three separate groups each  with Gypsy outgroup

#### subgroup 1 - just CCDC8
cd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/alignments/PNMA/masterAlignments/trees/CCDC8


## check the ingroups are distant from the outgroups: they are. 
# When I query with human CCDC8, all CCDC8 ingroups have e-value <  3e-115 and all outgroups >  1e-15
splitfastafileextractoneseq.pl ../../PNMAseqsToAlign3edited_plusOutgroup.peps.fa.nogaps aln-PNMA-CCDC8_CCDC8_Homo_sapiens_NM_032040
tblastn -query aln-PNMA-CCDC8_CCDC8_Homo_sapiens_NM_032040.fa  -db ../../PNMAseqsToAlign3edited.fa.nogaps -out aln-PNMA-CCDC8_CCDC8_Homo_sapiens_NM_032040.fa.tblastn_seqsToAln3 


## now make a tree for CCDC8, without the gypsy outgroup, because it aligns poorly and for only 70 amino acids

# nucleotide tree - use PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_CCDC8_aln1_NT.fa
but remove gappy positions (if >50% seqs have gap:)

cp ../../PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_CCDC8_aln1_NT.addGroupNames.fa .
../../../../../scripts/removegapsfromalignmentifsomeproportionofseqshavegap.pl -threshold=0.3 PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_CCDC8_aln1_NT.addGroupNames.fa

../../../../../scripts/runPHYML.pl -boots=100 -threads=10 -removeBlen=0 PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_CCDC8_aln1_NT.addGroupNames.degap_0.3.fa


# amino acid tree 
cp ../../PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_CCDC8_aln1_NT.addGroupNames.peps.fa .
../../../../../scripts/removegapsfromalignmentifsomeproportionofseqshavegap.pl -threshold=0.3 PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_CCDC8_aln1_NT.addGroupNames.peps.fa

../../../../../scripts/runPHYML.pl -type=aa -model=JTT -boots=100 -threads=10 -removeBlen=0 PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_CCDC8_aln1_NT.addGroupNames.peps.degap_0.3.fa
    
# trim in-frame to get decent alignment to use in PAML:
manually made PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_CCDC8_aln1_NT.addGroupNames.trimPositionsCodons.txt

../../../../../scripts/trimalignmentmulti.bioperl -coords=codons PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_CCDC8_aln1_NT.addGroupNames.trimPositionsCodons.txt PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_CCDC8_aln1_NT.addGroupNames.fa


# dN/dS
../../../../../scripts/makeTreeAndRunPAML.pl PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_CCDC8_aln1_NT.addGroupNames.segmentsJoined.fa

dN/dS = 0.145 (whole gene minus poorly aligned chunks, 14 placental mammals, dS tree len 3.3)


xx I should add an option to removegapsfromalignmentifsomeproportionofseqshavegap.pl for in-frame only gap removal
xx or, add an option to removegapsfromalignmentinframeonly.pl to consider some proportion of seqs


#### subgroup 2 - just ZCCs:

cd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/alignments/PNMA/masterAlignments/trees/ZCCs

xxx include gypsy outgroup or not? alignment is 203 aa


## check the ingroups are distant from the outgroups: they are. 
# When I query with either human ZCC, all ZCC ingroups have e-value < 7e-159 and all outgroups >  1e-47

splitfastafileextractoneseq.pl ../../PNMAseqsToAlign3edited_plusOutgroup.peps.fa.nogaps aln-PNMA-ZCCs_ZCCHC12_Homo_sapiens_NM_001312891

splitfastafileextractoneseq.pl ../../PNMAseqsToAlign3edited_plusOutgroup.peps.fa.nogaps aln-PNMA-ZCCs_ZCCHC18_Homo_sapiens_NM_001143978


tblastn -query aln-PNMA-ZCCs_ZCCHC12_Homo_sapiens_NM_001312891.fa  -db ../../PNMAseqsToAlign3edited.fa.nogaps -out aln-PNMA-ZCCs_ZCCHC12_Homo_sapiens_NM_001312891.fa.tblastn_seqsToAln3 

tblastn -query aln-PNMA-ZCCs_ZCCHC18_Homo_sapiens_NM_001143978.fa  -db ../../PNMAseqsToAlign3edited.fa.nogaps -out aln-PNMA-ZCCs_ZCCHC18_Homo_sapiens_NM_001143978.fa.tblastn_seqsToAln3 


## now make a tree for ZCCs, just amino acids, as they're diverged enough

try it with and without the gypsy outgroup, because outgroup aligns poorly and for only 70 amino acids


# amino acid tree WITHOUT gypsy outgroup:

cp ../../PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_ZCCs_aln1_NT.addGroupNames.peps.fa .

../../../../../scripts/removegapsfromalignmentifsomeproportionofseqshavegap.pl -threshold=0.3 PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_ZCCs_aln1_NT.addGroupNames.peps.fa

# prottest - chooses JTT
convertStarStopToGap.bioperl PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_ZCCs_aln1_NT.addGroupNames.peps.degap_0.3.fa

module load Java
java -jar ~/malik_lab_shared/prottest-3.4.2/prottest-3.4.2.jar -i PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_ZCCs_aln1_NT.addGroupNames.peps.degap_0.3.noStop.fa -threads 4 > PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_ZCCs_aln1_NT.addGroupNames.peps.degap_0.3.noStop.fa.prottest.out
module purge
grep 'Best' PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_ZCCs_aln1_NT.addGroupNames.peps.degap_0.3.noStop.fa.prottest.out

../../../../../scripts/runPHYML.pl -type=aa -model=JTT -boots=100 -threads=10 -removeBlen=0 PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_ZCCs_aln1_NT.addGroupNames.peps.degap_0.3.fa
    xxxx running

# amino acid tree WITH gypsy outgroup:


# tried adding outgroup to existing alignment, but there was an error, I'm guessing due to presence of stop codons
mafft --leavegappyregion --add ../../.././outgroups/MamGyp_gag#LTR_Gypsy.fa --reorder PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_ZCCs_aln1_NT.addGroupNames.peps.fa > PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_ZCCs_aln1_NT.addGroupNames_plusOutgroup.peps.fa
# ERROR! The original 34 sequences must be aligned
# alignmentlength = 443, but strlen(seq[1])=445

# instead, align fresh 

../../../../../scripts/removegapsfromseq.bioperl PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_ZCCs_aln1_NT.addGroupNames.peps.fa

cat PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_ZCCs_aln1_NT.addGroupNames.peps.fa.nogaps ../../../outgroups/MamGyp_gag#LTR_Gypsy.fa > PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_ZCCs_aln1_NT.addGroupNames_plusOutgroup.peps.fa

mafft  PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_ZCCs_aln1_NT.addGroupNames_plusOutgroup.peps.fa > PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_ZCCs_aln1_NT.addGroupNames_plusOutgroup.peps.aln1.fa

# degap then trim - I look in Geneious and choose positions 1-216 w.r.t. degapped alignment
../../../../../scripts/removegapsfromalignmentifsomeproportionofseqshavegap.pl -threshold=0.3 PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_ZCCs_aln1_NT.addGroupNames_plusOutgroup.peps.aln1.fa
../../../../../scripts/trimalignment.bioperl -start=1 -end=216 PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_ZCCs_aln1_NT.addGroupNames_plusOutgroup.peps.aln1.degap_0.3.fa

# prottest - chooses JTT
module load Java
java -jar ~/malik_lab_shared/prottest-3.4.2/prottest-3.4.2.jar -i PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_ZCCs_aln1_NT.addGroupNames_plusOutgroup.peps.aln1.degap_0.3.trim1_216.fa -threads 4 > PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_ZCCs_aln1_NT.addGroupNames_plusOutgroup.peps.aln1.degap_0.3.trim1_216.fa.prottest.out
module purge

grep 'Best' PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_ZCCs_aln1_NT.addGroupNames_plusOutgroup.peps.aln1.degap_0.3.trim1_216.fa.prottest.out

# tree
../../../../../scripts/runPHYML.pl -type=aa -model=JTT -boots=100 -threads=10 -removeBlen=0 PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_ZCCs_aln1_NT.addGroupNames_plusOutgroup.peps.aln1.degap_0.3.trim1_216.fa
    xxx running

cd PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_ZCCs_aln1_NT.addGroupNames.peps.degap_0.3.fa_PHYMLtree

reorderseqs_treeorder.pl PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_ZCCs_aln1_NT.addGroupNames.peps.degap_0.3.fa PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_ZCCs_aln1_NT.addGroupNames.peps.degap_0.3.fa_PHYMLtree/PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_ZCCs_aln1_NT.addGroupNames.peps.degap_0.3.fa.phyml_phyml_tree.txt.names

## get nucleotide alignments for dN/dS analysis - separate 12 and 18, without rodents, without Afrotheria/Xenarthra

cp ../../PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_ZCCs_aln1_NT.fa .

manually make ZCCHC12seqsForPAML.txt and ZCCHC18seqsForPAML.txt

splitfastafileextractsomeseqs.bioperl PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_ZCCs_aln1_NT.fa ZCCHC12seqsForPAML.txt
splitfastafileextractsomeseqs.bioperl PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_ZCCs_aln1_NT.fa ZCCHC18seqsForPAML.txt

../../../../../scripts/removegapsfromalignmentinframeonly.pl ZCCHC12seqsForPAML.txt.fa  ZCCHC18seqsForPAML.txt.fa 

../../../../../scripts/makeTreeAndRunPAML.pl ZCCHC12seqsForPAML.txt.fa.degapcodon ZCCHC18seqsForPAML.txt.fa.degapcodon


#### tree and dN/dS for PNMAs other than ZCCs and CCDC8
cd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/alignments/PNMA/masterAlignments/trees/others

xxx actually do this with protein seqs where I added group names

cat ../../PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_MOAP1_aln1_NT.addGroupNames.peps.fa ../../PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_PNMA1_aln1_NT.addGroupNames.peps.fa ../../PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_PNMA2_aln1_NT.addGroupNames.peps.fa ../../PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_PNMA3_aln1_NT.addGroupNames.peps.fa ../../PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_PNMA5_aln1_NT.addGroupNames.peps.fa ../../PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_PNMA6A_aln1_NT.addGroupNames.peps.fa ../../PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_PNMA6EF_aln1_NT.addGroupNames.peps.fa ../../PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_PNMA8A_aln1_NT.addGroupNames.peps.fa ../../PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_PNMA8B_aln1_NT.addGroupNames.peps.fa > PNMAothers_AA.fa
removegapsfromseq.bioperl PNMAothers_AA.fa 

### align proteins, no outgroup
mafft PNMAothers_AA.fa.nogaps > PNMAothers_AA.aln1.fa

### align proteins, with outgroup
cat PNMAothers_AA.fa.nogaps ../../../outgroups/MamGyp_gag#LTR_Gypsy.fa > PNMAothers_AA.fa.nogaps.plusOutgroup.fa

mafft PNMAothers_AA.fa.nogaps.plusOutgroup.fa > PNMAothers_AA.fa.nogaps.plusOutgroup.aln1.fa

# degap, trim
../../../../../scripts/removegapsfromalignmentifsomeproportionofseqshavegap.pl -threshold=0.3 PNMAothers_AA.fa.nogaps.plusOutgroup.aln1.fa
    manually determine trim coords: 1-328
../../../../../scripts/trimalignment.bioperl -start=1 -end=328 PNMAothers_AA.fa.nogaps.plusOutgroup.aln1.degap_0.3.fa



# prottest - chooses JTT
module load Java
java -jar ~/malik_lab_shared/prottest-3.4.2/prottest-3.4.2.jar -i PNMAothers_AA.fa.nogaps.plusOutgroup.aln1.degap_0.3.trim1_328.fa -threads 4 > PNMAothers_AA.fa.nogaps.plusOutgroup.aln1.degap_0.3.trim1_328.fa.prottest.out
module purge

grep 'Best' PNMAothers_AA.fa.nogaps.plusOutgroup.aln1.degap_0.3.trim1_328.fa.prottest.out


# tree
../../../../../scripts/runPHYML.pl -type=aa -model=JTT -boots=100 -threads=10 -removeBlen=0 PNMAothers_AA.fa.nogaps.plusOutgroup.aln1.degap_0.3.trim1_328.fa
     xxxxx running


### MOAP-only analysis
cd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/alignments/PNMA/masterAlignments/trees/others/just_MOAP

xx NT aln, check trimming, check for duplicate species, make tree and check, dN/dS

cp ../../../PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_MOAP1_aln1_NT.fa .

##  use blastn to get MOAP from some missing species - cow, sheep, horse, dog

removegapsfromseq.bioperl PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_MOAP1_aln1_NT.fa

mkdir PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_MOAP1_aln1_NT.fa.nogaps_individualSeqs

cd PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_MOAP1_aln1_NT.fa.nogaps_individualSeqs/
splitfastafile.bioperl ../PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_MOAP1_aln1_NT.fa.nogaps

# dog - use cat as query
blastn -task blastn -query MOAP1_Felis_catus_XM_023255976.fa -db ~/public_databases/UCSC/dog_Sep2011/canFam3.fa -out  MOAP1_Felis_catus_XM_023255976.fa.blastn_canFam3 -num_threads 4
    chr8:62393047-62394092 (- strand)
blastdbcmd -db ~/public_databases/UCSC/dog_Sep2011/canFam3.fa  -entry chr8 -range 62393047-62394092 -strand minus -out dog_MOAP.fa
    edited name to MOAP_Canis_lupus_familiaris_fromGenomic

# sheep - use cat as query
blastn -task blastn -query MOAP1_Felis_catus_XM_023255976.fa -db ~/public_databases/UCSC/sheep_Aug2012/oviAri3.fa -out  MOAP1_Felis_catus_XM_023255976.fa.blastn_oviAri3 -num_threads 4
    chr18:56744796-56745761  (- strand)
blastdbcmd -db ~/public_databases/UCSC/sheep_Aug2012/oviAri3.fa -entry chr18 -range 56744796-56745761 -strand minus -out sheep_MOAP.fa
    edited name to MOAP_Ovis_aries_fromGenomic

# cow - use cat as query
blastn -task blastn -query MOAP1_Felis_catus_XM_023255976.fa -db ~/public_databases/UCSC/cow_Jun2014/bosTau8.fa -out  MOAP1_Felis_catus_XM_023255976.fa.blastn_bosTau8 -num_threads 4
    chr21:58402927-58403899  - strand
blastdbcmd -db ~/public_databases/UCSC/cow_Jun2014/bosTau8.fa -entry chr21 -range 58402927-58403899 -strand minus -out cow_MOAP.fa
    edited name to MOAP_Bos_taurus_fromGenomic

# horse - use cat as query
blastn -task blastn -query MOAP1_Felis_catus_XM_023255976.fa -db ~/public_databases/UCSC/horse_Jan2018/equCab3.fa -out  MOAP1_Felis_catus_XM_023255976.fa.blastn_equCab3 -num_threads 4
    chr24:36391801-36392854 (- strand)
blastdbcmd -db ~/public_databases/UCSC/horse_Jan2018/equCab3.fa -entry chr24 -range 36391801-36392854 -strand minus -out horse_MOAP.fa
    edited name to MOAP_Equus_caballus_fromGenomic

# add these seqs cow_MOAP.fa sheep_MOAP.fa dog_MOAP.fa horse_MOAP.fa
cat cow_MOAP.fa sheep_MOAP.fa dog_MOAP.fa horse_MOAP.fa > newMOAP1seqs.fa
/home/jayoung/FH_fast_storage/miscMalikLab/domesticated_capsid/scripts/checkOrthologsBlastBackOKtoSameGroupSeq.bioperl newMOAP1seqs.fa
   all do blast back to MOAP1
more newMOAP1seqs.fa_blastBackCheck/blastBacks/*.blastnRefDB

cat ../PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_MOAP1_aln1_NT.fa.nogaps newMOAP1seqs.fa > ../PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_MOAP1_toAln2.fa

cd  ../
/home/jayoung/FH_fast_storage/miscMalikLab/domesticated_capsid/scripts/runMACSEsimpleInFrameAlignment.pl PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_MOAP1_toAln2.fa
     
  trim/edit that alignment, call it PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_MOAP1_aln2_NT.fa 
move it to the masterAlignments dir and rerun the pseudReport script

cp PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_MOAP1_toAln2_aln1_NT.fa PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_MOAP1_aln2_NT.fa 
    edit
cp PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_MOAP1_aln2_NT.fa ../../../
cd ../../../
mv PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_MOAP1_aln1* old

../../../scripts/checkAlignmentFrameshiftsStops.bioperl -findFullLenRefSeqs=1 -geneField=2 PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_MOAP1_aln2_NT.fa

../../../scripts/addAlnNameToSeqNames.bioperl PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_MOAP1_aln2_NT.fa
translate1frame.bioperl PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_MOAP1_aln2_NT.addGroupNames.fa 

cow, sheep, horse, dog are all pseudogenes

    alignment is good.  
    make a tree. 

~/FH_fast_storage/miscMalikLab/domesticated_capsid/scripts/runPHYML.pl -boots=100 -threads=10 -removeBlen=0 PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_MOAP1_aln2_NT.fa
     tree looks as expected.


## double-check cat seq is complete, and the gene prediction didn't have a fake intron introduced to get around a frameshift/stop

blastn -task blastn -query MOAP1_Felis_catus_XM_023255976.fa -db ~/public_databases/UCSC/cat_Nov2017/felCat9.fa -out  MOAP1_Felis_catus_XM_023255976.fa.blastn_felCat9 -num_threads 4


## get dN/dS of just intact genes
splitfastafileextractsomeseqs.bioperl PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_MOAP1_aln2_NT.fa MOAP1_intactGenes.txt 

~/FH_fast_storage/miscMalikLab/domesticated_capsid/scripts/removegapsfromalignmentinframeonly.pl MOAP1_intactGenes.txt.fa 

~/FH_fast_storage/miscMalikLab/domesticated_capsid/scripts/makeTreeAndRunPAML.pl MOAP1_intactGenes.txt.fa.degapcodon

#### PNMA1 analysis

cd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/alignments/PNMA/masterAlignments/trees/others/just_PNMA1

cp ../../../PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_PNMA1_aln1_NT.fa .

# check separate from paralogs
splitfastafileextractoneseq.pl PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_PNMA1_aln1_NT.fa PNMA1_Homo_sapiens_NM_006029

blastn -task blastn -query PNMA1_Homo_sapiens_NM_006029.fa -db ../../../../masterAlignments/PNMAseqsToAlign3edited.fa.nogaps -out PNMA1_Homo_sapiens_NM_006029.fa.blastn_seqsToAln3 
    clear separation between PNMA1 and non-PNMA1 hits

# check alignment
great alignment. two Dasypus seqs, only 95% identical

both Dasypus seqs look like PNMA1

/home/jayoung/FH_fast_storage/miscMalikLab/domesticated_capsid/scripts/checkOrthologsBlastBackOKtoSameGroupSeq.bioperl PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_PNMA1_aln1_NT.fa

# tree
~/FH_fast_storage/miscMalikLab/domesticated_capsid/scripts/runPHYML.pl -boots=100 -threads=10 -removeBlen=0 PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_PNMA1_aln1_NT.fa
    tree looks as expected

# remove both of the two Dasypus seqs and run PAML

made this: PNMA1forPAML.txt
splitfastafileextractsomeseqs.bioperl PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_PNMA1_aln1_NT.fa PNMA1forPAML.txt

(and it's such a good alignment there are no gaps)

~/FH_fast_storage/miscMalikLab/domesticated_capsid/scripts/makeTreeAndRunPAML.pl PNMA1forPAML.txt.fa

   dN/dS is 0.06165


###### PNMA2 analysis

cd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/alignments/PNMA/masterAlignments/trees/others/just_PNMA2

cp ../../../PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_PNMA2_aln1_NT.fa .

# check alignment
great alignment. 

# check separate from paralogs
splitfastafileextractoneseq.pl PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_PNMA2_aln1_NT.fa PNMA2_Homo_sapiens_NM_007257
removegapsfromseq.bioperl PNMA2_Homo_sapiens_NM_007257.fa
blastn -task blastn -query PNMA2_Homo_sapiens_NM_007257.fa.nogaps -db ../../../../masterAlignments/PNMAseqsToAlign3edited.fa.nogaps -out PNMA2_Homo_sapiens_NM_007257.fa.nogaps.blastn_seqsToAln3 
    clear separation between PNMA2 and non-PNMA2 hits


# tree
~/FH_fast_storage/miscMalikLab/domesticated_capsid/scripts/runPHYML.pl -boots=100 -threads=10 -removeBlen=0 PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_PNMA2_aln1_NT.fa
    tree looks more or less as expected

# run PAML on the whole thing
~/FH_fast_storage/miscMalikLab/domesticated_capsid/scripts/makeTreeAndRunPAML.pl PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_PNMA2_aln1_NT.fa

   dN/dS is 0.12210


###### PNMA3 analysis

cd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/alignments/PNMA/masterAlignments/trees/others/just_PNMA3

cp ../../../PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_PNMA3_aln1_NT.fa .

# check alignment - OK

# check separate from paralogs
splitfastafileextractoneseq.pl PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_PNMA3_aln1_NT.fa PNMA3_Homo_sapiens_NM_013364
removegapsfromseq.bioperl PNMA3_Homo_sapiens_NM_013364.fa
blastn -task blastn -query PNMA3_Homo_sapiens_NM_013364.fa.nogaps -db ../../../../masterAlignments/PNMAseqsToAlign3edited.fa.nogaps -out PNMA3_Homo_sapiens_NM_013364.fa.nogaps.blastn_seqsToAln3 
    clear separation between PNMA3 and non-PNMA3 hits

# tree
~/FH_fast_storage/miscMalikLab/domesticated_capsid/scripts/runPHYML.pl -boots=100 -threads=10 -removeBlen=0 PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_PNMA3_aln1_NT.fa
    tree looks as expected


# started to get missing seqs from pig, cow, sheep, dog.  use horse or cat seq as query for all. 
but did not finish it.
splitfastafileextractoneseq.pl PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_PNMA3_aln1_NT.fa PNMA3_Equus_caballus_NM_001257075
removegapsfromseq.bioperl PNMA3_Equus_caballus_NM_001257075.fa

splitfastafileextractoneseq.pl PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_PNMA3_aln1_NT.fa PNMA3_Felis_catus_XM_023249127
removegapsfromseq.bioperl PNMA3_Felis_catus_XM_023249127.fa


# pig
blastn -task blastn -query PNMA3_Equus_caballus_NM_001257075.fa.nogaps -db ~/public_databases/UCSC/pig_Feb2017/susScr11.fa -out  PNMA3_Equus_caballus_NM_001257075.fa.nogaps.blastn_susScr11 -num_threads 4

# cow
blastn -task blastn -query PNMA3_Equus_caballus_NM_001257075.fa.nogaps -db ~/public_databases/UCSC/cow_Jun2014/bosTau8.fa -out  PNMA3_Equus_caballus_NM_001257075.fa.nogaps.blastn_bosTau8 -num_threads 4
    xx two equally good matches

# sheep
blastn -task blastn -query PNMA3_Equus_caballus_NM_001257075.fa.nogaps -db ~/public_databases/UCSC/sheep_Aug2012/oviAri3.fa -out  PNMA3_Equus_caballus_NM_001257075.fa.nogaps.blastn_oviAri3 -num_threads 4
    could probably get this
    
# dog
blastn -task blastn -query PNMA3_Equus_caballus_NM_001257075.fa.nogaps -db ~/public_databases/UCSC/dog_Sep2011/canFam3.fa -out  PNMA3_Equus_caballus_NM_001257075.fa.nogaps.blastn_canFam3 -num_threads 4
blastn -task blastn -query PNMA3_Felis_catus_XM_023249127.fa.nogaps -db ~/public_databases/UCSC/dog_Sep2011/canFam3.fa -out  PNMA3_Felis_catus_XM_023249127.fa.nogaps.blastn_canFam3 -num_threads 4
    xxx two equally good hits
    

# run PAML on the intact genes thing
~/FH_fast_storage/miscMalikLab/domesticated_capsid/scripts/makeTreeAndRunPAML.pl PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_PNMA3_aln1_NT.fa

   dN/dS is 0.20187




###### PNMA5 analysis

cd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/alignments/PNMA/masterAlignments/trees/others/just_PNMA5 
cp ../../../PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_PNMA5_aln1_NT.fa .

# check alignment
good alignment. 

# check separate from paralogs
splitfastafileextractoneseq.pl PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_PNMA5_aln1_NT.fa PNMA5_Homo_sapiens_NM_001103150
removegapsfromseq.bioperl PNMA5_Homo_sapiens_NM_001103150.fa
blastn -task blastn -query PNMA5_Homo_sapiens_NM_001103150.fa.nogaps -db ../../../../masterAlignments/PNMAseqsToAlign3edited.fa.nogaps -out PNMA5_Homo_sapiens_NM_001103150.fa.nogaps.blastn_seqsToAln3 
    clear separation between PNMA5 and non-PNMA5 hits

# nucleotide tree
~/FH_fast_storage/miscMalikLab/domesticated_capsid/scripts/runPHYML.pl -boots=100 -threads=10 -removeBlen=0 PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_PNMA5_aln1_NT.fa
     tree looks more or less as expected

# run PAML on just intact genes

manually made PNMA5_intact_aln1.fa, and trimmed to codons 1-452
~/FH_fast_storage/miscMalikLab/domesticated_capsid/scripts/trimalignment.bioperl -start=1 -end=452 -coords=codons PNMA5_intact_aln1.fa

~/FH_fast_storage/miscMalikLab/domesticated_capsid/scripts/makeTreeAndRunPAML.pl PNMA5_intact_aln1.trim1_1356.fa
   dN/dS is 0.34931 



###### PNMA6A analysis

cd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/alignments/PNMA/masterAlignments/trees/others/just_PNMA6A
cp ../../../PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_PNMA6A_aln1_NT.fa .

# check alignment
mostly good alignment, but needs to be trimmed. 

# check separate from paralogs
splitfastafileextractoneseq.pl PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_PNMA6A_aln1_NT.fa PNMA6A_Homo_sapiens_NM_032882
removegapsfromseq.bioperl PNMA6A_Homo_sapiens_NM_032882.fa
blastn -task blastn -query PNMA6A_Homo_sapiens_NM_032882.fa.nogaps -db ../../../../masterAlignments/PNMAseqsToAlign3edited.fa.nogaps -out PNMA6A_Homo_sapiens_NM_032882.fa.nogaps.blastn_seqsToAln3 
    clear separation between PNMA6A and non-PNMA6A hits


# nucleotide tree - need to trim, codons 1-357
~/FH_fast_storage/miscMalikLab/domesticated_capsid/scripts/trimalignment.bioperl -start=1 -end=357 -coords=codons PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_PNMA6A_aln1_NT.fa

~/FH_fast_storage/miscMalikLab/domesticated_capsid/scripts/runPHYML.pl -boots=100 -threads=10 -removeBlen=0 PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_PNMA6A_aln1_NT.trim1_1071.fa
    tree looks more or less as expected

# run PAML on just intact genes

splitfastafileextractsomeseqs.bioperl PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_PNMA6A_aln1_NT.fa PNMA6A_intact_aln1.txt

 trimmed to codons 1-350
 
~/FH_fast_storage/miscMalikLab/domesticated_capsid/scripts/trimalignment.bioperl -start=1 -end=350 -coords=codons PNMA6A_intact_aln1.txt.fa

~/FH_fast_storage/miscMalikLab/domesticated_capsid/scripts/makeTreeAndRunPAML.pl PNMA6A_intact_aln1.txt.trim1_1050.fa

   dN/dS is 0.12955 



###### PNMA6EF analysis

cd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/alignments/PNMA/masterAlignments/trees/others/just_PNMA6EF
cp ../../../PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_PNMA6EF_aln1_NT.fa .

# check alignment
alignment has some big gaps, needs to be trimmed. 

# check separate from paralogs
splitfastafileextractoneseq.pl PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_PNMA6EF_aln1_NT.fa PNMA6E_Homo_sapiens_NM_001367770

removegapsfromseq.bioperl PNMA6E_Homo_sapiens_NM_001367770.fa
blastn -task blastn -query PNMA6E_Homo_sapiens_NM_001367770.fa.nogaps -db ../../../../masterAlignments/PNMAseqsToAlign3edited.fa.nogaps -out PNMA6E_Homo_sapiens_NM_001367770.fa.nogaps.blastn_seqsToAln3 
    clear separation between PNMA6EF and non-PNMA6EF hits


# nucleotide tree - need to trim, codons 342-509
~/FH_fast_storage/miscMalikLab/domesticated_capsid/scripts/trimalignment.bioperl -start=342 -end=509 -coords=codons PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_PNMA6EF_aln1_NT.fa

~/FH_fast_storage/miscMalikLab/domesticated_capsid/scripts/runPHYML.pl -boots=100 -threads=10 -removeBlen=0 PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_PNMA6EF_aln1_NT.trim1024_1527.fa
    
    tree looks more or less as expected

# run PAML on just intact genes E/F separately, although outgroups are the same
splitfastafileextractsomeseqs.bioperl PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_PNMA6EF_aln1_NT.fa PNMA6E_seqsForPAML.txt
splitfastafileextractsomeseqs.bioperl PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_PNMA6EF_aln1_NT.fa PNMA6F_seqsForPAML.txt
 
~/FH_fast_storage/miscMalikLab/domesticated_capsid/scripts/removegapsfromalignmentinframeonly.pl PNMA6E_seqsForPAML.txt.fa PNMA6F_seqsForPAML.txt.fa 

6E trim: codons 342-509
6F trim: codons 342-509

~/FH_fast_storage/miscMalikLab/domesticated_capsid/scripts/trimalignment.bioperl -start=342 -end=509 -coords=codons PNMA6E_seqsForPAML.txt.fa.degapcodon

~/FH_fast_storage/miscMalikLab/domesticated_capsid/scripts/trimalignment.bioperl -start=342 -end=509 -coords=codons PNMA6F_seqsForPAML.txt.fa.degapcodon

~/FH_fast_storage/miscMalikLab/domesticated_capsid/scripts/makeTreeAndRunPAML.pl PNMA6E_seqsForPAML.txt.fa.degapcodon.trim1024_1527.fa PNMA6F_seqsForPAML.txt.fa.degapcodon.trim1024_1527.fa
   6E dN/dS is 0.14970
   6F dN/dS is 0.15256



###### PNMA8A analysis

cd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/alignments/PNMA/masterAlignments/trees/others/just_PNMA8A
cp ../../../PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_PNMA8A_aln1_NT.fa .

did some more editing, renamed to PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_PNMA8A_aln2_NT.fa

# check alignment edited more

# check separate from paralogs
splitfastafileextractoneseq.pl PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_PNMA8A_aln2_NT.fa PNMA8A_Homo_sapiens_NM_018215

removegapsfromseq.bioperl PNMA8A_Homo_sapiens_NM_018215.fa
blastn -task blastn -query PNMA8A_Homo_sapiens_NM_018215.fa.nogaps -db ../../../../masterAlignments/PNMAseqsToAlign3edited.fa.nogaps -out PNMA8A_Homo_sapiens_NM_018215.fa.nogaps.blastn_seqsToAln3 
    clear separation between PNMA8A and non-PNMA8A hits

# nucleotide tree - no need to trim for this purpose

~/FH_fast_storage/miscMalikLab/domesticated_capsid/scripts/runPHYML.pl -boots=100 -threads=10 -removeBlen=0 PNMAseqsToAlign3.fa.nonRedundant.group_PNMA_PNMA8A_aln2_NT.fa
    tree looks more or less as expected

# run PAML 

manually got this: PNMA8A_intact_aln2.fa 

~/FH_fast_storage/miscMalikLab/domesticated_capsid/scripts/trimalignmentmulti.bioperl -coords=codons PNMA8A_intact_aln2_coordsTrimMultiCodons.txt PNMA8A_intact_aln2.fa


~/FH_fast_storage/miscMalikLab/domesticated_capsid/scripts/makeTreeAndRunPAML.pl PNMA8A_intact_aln2.segmentsJoined.fa

   dN/dS is 0.32256 


xxx  do PNMA8B


##### PNMA/SIRH families:

xxxxx remake the links after other blasts finish, before doing the other alignments
# PNMA family
# SIRH family:


xx then run ../../../scripts/sortBlastHitsBySpecies.pl *tblastnNR.txt
cd hits_each_species
../../../../scripts/getgenbankJY_eutils_gbFormat.bioperl -db=nucleotide hits*.txt 
../../../../scripts/getCDSseqAndBedFileFromGenbankEntry.bioperl -includeNoCDS=0  hits_*.gb
    xxx think about exactly how to name the seqs. 
        for non-human seqs, start with species
        for human seqs, start with the gene name
        abbreviate species names
xx then take selected species and align with the human seqs, in groups
xx trim to well-alignable regions
xx appropriate outgroups? choose from Will's tree?
xx what do I do about splice isoforms? include them all for now?



###############  drosophila ARC

I also want to do some analysis on the two Drosophila ARC genes to see if the conservation metrics we are considering would work OK for those.

cd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/drosophila_ARC

## get D. melanogaster genes/proteins:

cd melanogaster_reference_seqs

got accessions of dARC1 and dARC2 from NCBI: 
dARC1.txt (NM_137111.3) 
dARC2.txt (NM_137112.2)

../../scripts/getgenbankJY_eutils_gbFormat.bioperl -db=nucleotide dARC1.txt dARC2.txt
../../scripts/getCDSseqAndBedFileFromGenbankEntry.bioperl dARC1.txt.gb  dARC2.txt.gb

rm *info.txt *warnings.txt
../../scripts/translate1frame.bioperl dARC1.txt.gb.ORFs dARC2.txt.gb.ORFs

## search PFAM
../../scripts/searchPFAMprotqueryNewMoreSensitive.pl dARC1.txt.gb.ORFs.peps.fa dARC2.txt.gb.ORFs.peps.fa
cat *ive/*PFAMscan.txt > bothGenesPFAMoutput.txt

## blast NR
cd ../blasts/tblastn_NR
../../../scripts/callblastjanetNRntProtquery.bioperl ../../melanogaster_reference_seqs/dARC1.txt.gb.ORFs.peps.fa ../../melanogaster_reference_seqs/dARC2.txt.gb.ORFs.peps.fa

../../../scripts/sortBlastHitsBySpecies.pl *tblastnNR.txt
cd hits_each_species
../../../../scripts/getgenbankJY_eutils_gbFormat.bioperl -db=nucleotide hits*.txt 
../../../../scripts/getCDSseqAndBedFileFromGenbankEntry.bioperl -includeNoCDS=0  hits_*.gb
 
## align
cd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/drosophila_ARC/alignment
cp  ../melanogaster_reference_seqs/*ORFs .

# get the 10 additional fly species that UCSC lists:
pushd ../blasts/tblastn_NR/hits_each_species/Drosophila_species
cp hits_Drosophila_erecta.txt.gb.ORFs ../../../../alignment/
cp hits_Drosophila_sechellia.txt.gb.ORFs ../../../../alignment/
cp hits_Drosophila_simulans.txt.gb.ORFs ../../../../alignment/
cp hits_Drosophila_yakuba.txt.gb.ORFs ../../../../alignment/
cp hits_Drosophila_ananassae.txt.gb.ORFs ../../../../alignment/
cp hits_Drosophila_persimilis.txt.gb.ORFs ../../../../alignment/
cp hits_Drosophila_pseudoobscura.txt.gb.ORFs ../../../../alignment/
cp hits_Drosophila_mojavensis.txt.gb.ORFs ../../../../alignment/
cp hits_Drosophila_virilis.txt.gb.ORFs ../../../../alignment/
cp hits_Drosophila_grimshawi.txt.gb.ORFs ../../../../alignment/
popd

## first alignment
cat *ORFs > dARC_seqsToAlign1.fa

runMACSEsimpleInFrameAlignment.pl dARC_seqsToAlign1.fa
    ran fine
mkdir old/aln1_parts
mv *ORFs dARC_seqsToAlign1.fa aln1_parts/

# trim to well-aligned bits
../../scripts/trimalignment_userefseqcoords_multi.bioperl -coords=codons  ../melanogaster_reference_seqs/dARC1_alnTrimCoordsCodons_aln1.txt dARC_seqsToAlign1_aln1_NT.fa

# make a tree
cd dARC_seqsToAlign1_aln1_NT.trimmulti.fa_treeNoBoots 
cp ../dARC_seqsToAlign1_aln1_NT.trimmulti.fa .
../../../scripts/runPHYMLonNucleotideAlignmentAndRemoveBranchLengths.pl -removeBlen=0 -job=tree1 dARC_seqsToAlign1_aln1_NT.trimmulti.fa

cd ../dARC_seqsToAlign1_aln1_NT.trimmulti.fa_treeWithBoots 
cp ../dARC_seqsToAlign1_aln1_NT.trimmulti.fa .
../../../scripts/runPHYMLonNucleotideAlignmentAndRemoveBranchLengths.pl -boots 100 -removeBlen=0 -job=tree2 dARC_seqsToAlign1_aln1_NT.trimmulti.fa


## second alignment - add outgroup: bee, apis mellifera

cd ~/FH_fast_storage/miscMalikLab/domesticated_capsid/drosophila_ARC/alignment
cp ../blasts/tblastn_NR/hits_each_species/Hymenoptera/hits_Apis_mellifera.txt.gb.ORFs .

cat dARC_seqsToAlign1_aln1_NT.fa hits_Apis_mellifera.txt.gb.ORFs > dARC_seqsToAlign2.fa

runMACSEsimpleInFrameAlignment.pl dARC_seqsToAlign2.fa
    ran fine
mkdir old/aln2_parts
mv hits_Apis_mellifera.txt.gb.ORFs old/aln2_parts/

# trim to well-aligned bits
../../scripts/trimalignment_userefseqcoords_multi.bioperl -coords=codons  ../melanogaster_reference_seqs/dARC1_alnTrimCoordsCodons_aln2.txt dARC_seqsToAlign2_aln1_NT.fa

# make a tree

mkdir dARC_seqsToAlign2_aln1_NT.trimmulti.fa_treeNoBoots 
mkdir dARC_seqsToAlign2_aln1_NT.trimmulti.fa_treeWithBoots 

cd dARC_seqsToAlign2_aln1_NT.trimmulti.fa_treeNoBoots 
cp ../dARC_seqsToAlign2_aln1_NT.trimmulti.fa .
../../../scripts/runPHYMLonNucleotideAlignmentAndRemoveBranchLengths.pl -removeBlen=0 -job=tree1 dARC_seqsToAlign2_aln1_NT.trimmulti.fa

cd ../dARC_seqsToAlign2_aln1_NT.trimmulti.fa_treeWithBoots 
cp ../dARC_seqsToAlign2_aln1_NT.trimmulti.fa .
../../../scripts/runPHYMLonNucleotideAlignmentAndRemoveBranchLengths.pl -boots 100 -removeBlen=0 -job=tree2 dARC_seqsToAlign2_aln1_NT.trimmulti.fa

# make protein tree
../../scripts/translate1frame.bioperl dARC_seqsToAlign2_aln1_NT.trimmulti.fa
../../scripts/runPHYML.pl -type=aa -model=JTT -sbatch=1 -boot=100 -threads=10 dARC_seqsToAlign2_aln1_NT.trimmulti.fa.peps.fa


#### subset aln2 - just melanogaster and obscura groups

splitfastafileextractsomeseqs.pl dARC_seqsToAlign2_aln1_NT.trimmulti.fa dARC_seqsToAlign2_justMelanogasterAndObscuraGroups.txt

../../scripts/runPHYML.pl -type=nt -model=GTR -sbatch=1 -boot=100 -threads=10 dARC_seqsToAlign2_justMelanogasterAndObscuraGroups.txt.seqs.fasta
   ran. 
makes two nice orthologous groups.
used FigTree to select names of seqs in each group: 
    dArc1_justMelanogasterAndObscuraGroups.txt
    dArc2_justMelanogasterAndObscuraGroups.txt

# split that alignment into Arc1 vs Arc2 (full length)
splitfastafileextractsomeseqs.bioperl dARC_seqsToAlign2_aln1_NT.fa dArc1_justMelanogasterAndObscuraGroups.txt
splitfastafileextractsomeseqs.bioperl dARC_seqsToAlign2_aln1_NT.fa dArc2_justMelanogasterAndObscuraGroups.txt

removegapsfromalignmentinframeonly.pl dArc1_justMelanogasterAndObscuraGroups.txt.fa dArc2_justMelanogasterAndObscuraGroups.txt.fa 

edited each a little bit

get overall dN/dS using PAML model 0

../../scripts/makeTreeAndRunPAML.pl dArc1_justMelanogasterAndObscuraGroups.txt.fa.degapcodon.edit dArc2_justMelanogasterAndObscuraGroups.txt.fa.degapcodon.edit

    Arc1: 0.0926 (whole gene, 8 Drosophila species, dS tree length is ~3.7)
    Arc2: 0.0383 (whole gene, 8 Drosophila species, dS tree length is ~3.7)
 
xx now, what do we do with the per-residue conservation information that these alignments give us?






##### github reminder: pushing edits back up to the github website:

https://github.com/jayoung/domesticated_capsid.git

git status

# subsequent updates:
git add --verbose --all . 
   (the --all also lets it take care of files I remove locally, also removing them from the server)
git commit
    opens up a file in vim where I can make notes about what I've changed. 
    "i" gets me into edit mode in vim
    "escape" gets me out of edit mode
    :wq to save and exit vim 
git push

# first time:
made a README.md file
git init
git add --all . 
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/jayoung/domesticated_capsid.git
git push -u origin main

